
package generated;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 3.3.1
 * 2019-04-23T17:04:22.405+02:00
 * Generated source version: 3.3.1
 *
 */
public final class ZWSPARAMETRAGEHTTPS_ZWSPARAMETRAGEHTTPS_Client {

    private static final QName SERVICE_NAME = new QName("urn:sap-com:document:sap:soap:functions:mc-style", "ZWS_PARAMETRAGE_HTTPS");

    private ZWSPARAMETRAGEHTTPS_ZWSPARAMETRAGEHTTPS_Client() {
    }

    public static void main(String args[]) throws java.lang.Exception {
        URL wsdlURL = ZWSPARAMETRAGEHTTPS_Service.WSDL_LOCATION;
        if (args.length > 0 && args[0] != null && !"".equals(args[0])) {
            File wsdlFile = new File(args[0]);
            try {
                if (wsdlFile.exists()) {
                    wsdlURL = wsdlFile.toURI().toURL();
                } else {
                    wsdlURL = new URL(args[0]);
                }
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
        }

        ZWSPARAMETRAGEHTTPS_Service ss = new ZWSPARAMETRAGEHTTPS_Service(wsdlURL, SERVICE_NAME);
        ZWSPARAMETRAGEHTTPS port = ss.getZWSPARAMETRAGEHTTPS();

        {
        System.out.println("Invoking zpmExtractParametrage...");
        javax.xml.ws.Holder<java.lang.String> _zpmExtractParametrage_eMsgErreur = new javax.xml.ws.Holder<java.lang.String>();
        javax.xml.ws.Holder<generated.ZpmttEquipeDestinataires> _zpmExtractParametrage_etEquipeDestinataires = new javax.xml.ws.Holder<generated.ZpmttEquipeDestinataires>();
        javax.xml.ws.Holder<generated.ZpmttEquipeSecteurs> _zpmExtractParametrage_etEquipeSecteurs = new javax.xml.ws.Holder<generated.ZpmttEquipeSecteurs>();
        javax.xml.ws.Holder<generated.ZpmttPositionReleves> _zpmExtractParametrage_etPositionReleves = new javax.xml.ws.Holder<generated.ZpmttPositionReleves>();
        javax.xml.ws.Holder<generated.ZpmttTypeInst> _zpmExtractParametrage_etTypeInst = new javax.xml.ws.Holder<generated.ZpmttTypeInst>();
        javax.xml.ws.Holder<generated.ZpmttTypeReleves> _zpmExtractParametrage_etTypeReleves = new javax.xml.ws.Holder<generated.ZpmttTypeReleves>();
        port.zpmExtractParametrage(_zpmExtractParametrage_eMsgErreur, _zpmExtractParametrage_etEquipeDestinataires, _zpmExtractParametrage_etEquipeSecteurs, _zpmExtractParametrage_etPositionReleves, _zpmExtractParametrage_etTypeInst, _zpmExtractParametrage_etTypeReleves);

        System.out.println("zpmExtractParametrage._zpmExtractParametrage_eMsgErreur=" + _zpmExtractParametrage_eMsgErreur.value);
        System.out.println("zpmExtractParametrage._zpmExtractParametrage_etEquipeDestinataires=" + _zpmExtractParametrage_etEquipeDestinataires.value);
        System.out.println("zpmExtractParametrage._zpmExtractParametrage_etEquipeSecteurs=" + _zpmExtractParametrage_etEquipeSecteurs.value);
        System.out.println("zpmExtractParametrage._zpmExtractParametrage_etPositionReleves=" + _zpmExtractParametrage_etPositionReleves.value);
        System.out.println("zpmExtractParametrage._zpmExtractParametrage_etTypeInst=" + _zpmExtractParametrage_etTypeInst.value);
        System.out.println("zpmExtractParametrage._zpmExtractParametrage_etTypeReleves=" + _zpmExtractParametrage_etTypeReleves.value);

        }

        System.exit(0);
    }

}
